https://www.analyticsvidhya.com/blog/2017/09/understaing-support-vector-machine-example-code/

https://en.wikipedia.org/wiki/Support-vector_machine


pros:
1: It works really well with a clear margin of separation
2: It is effective in high dimensional spaces
3: It is effective in cases where the number of dimensions is greated than the number of samples
4: It uses a subset of training points in the decision function (called support vectors), so it is
also memory efficient.

Cons:
1: It doesn't perform well when we have large data set because the required training time is higher.
2: It also doesn't perform very well, when the data set has more noise i.e. target classes are overlapping.
3: SVM doesn't directly provide probability estimates, these are calculated using an expensive cross-validation.
It is included in the relative SVC method of Python scikit-learn library.